-- // VARIABLES //
local player = game.Players.LocalPlayer
local VIM = game:service("VirtualInputManager")
local hrp = player.Character.HumanoidRootPart
-- // TABLES //
local quests = {"Thief Quest", "Buff Thief Quest", "Desert Thief Quest", "Desert Swordsmand Quest", "Monkey Quest", "Buff Monkey Quest", "Blizzard Bandit Quest", "Yeti Quest", "Mink Quest", "Pro Mink Quest"}
local islands = {"Starter Island", "Desert", "Jungle Island", "Hima Island", "Island of Zou","Cursed Island"}
local npcs = {}
local tools = {}
local mobs = {}
-- // GLOBAL ENVIRONMENTS //
getgenv().npc = nil
getgenv().mob = nil
getgenv().island = nil
getgenv().quest = nil

-- // ADD MOBS TO DROPDOWN //
for i,v in pairs(game:GetService("Workspace").World.Live:GetChildren()) do
    insert = true
    for i,v2 in pairs(mobs) do if v2 == v.Name then insert = false end end
    if insert then table.insert(mobs, v.Name) end
end

-- // REMOVE PLAYERS FROM DROPDOWN //
for i,players in pairs(game.Players:GetPlayers()) do
	for i,v in pairs(mobs) do
	if v == players.Name then
		table.remove(mobs, i)
		end
	end
end

-- // ADDS WEAPONS TO DROPDOWN //
for i,v in pairs(player.Backpack:GetChildren()) do
	if v:IsA("Tool") then
		table.insert(tools, v.Name)
	end
end


-- // ADD NPCS TO DROPDOWN //
for _,v in pairs(game:GetService("Workspace").World.NPC:GetChildren()) do 
	insert = true 
	for _,v2 in pairs(npcs) do if v2 == v.Name then insert = false end end 
	if insert then table.insert(npcs, v.Name) end 
end


-- // DELETE FAKE FRUIT //
for i,v in pairs(game:GetService("Workspace").DFSpawns:GetChildren()) do
    if v.Name == "Dark Root" then
        v:Destroy()
    end
end

-- // INSTANT PROXIMITY PROMPT / /
game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
    prompt.HoldDuration = 0
 end)
-- // FUNCTIONS //
function islandTP()
    if getgenv().island == "Starter Island" then
		hrp.CFrame = CFrame.new(-23.2552795, 116.013466, 269.995972)
	elseif 
	getgenv().island == "Desert" then
		hrp.CFrame = CFrame.new(-419.57431, 117.407639, -1898.2561)
	elseif 
	getgenv().island == "Jungle Island" then
		hrp.CFrame = CFrame.new(1389.97729, 93.1349182, -1897.78186)
	elseif 
	getgenv().island == "Hima Island" then
		hrp.CFrame = CFrame.new(-2622.52173, 113.539871, -1223.94434)
	elseif
	getgenv().island == "Island of Zou" then
		hrp.CFrame = CFrame.new(-267.20636, 91.4027939, -4583.92139)
	elseif 
	getgenv().island == "Cursed Island" then
		hrp.CFrame = CFrame.new(1506.03223, 121.317871, -3511.9370)
	end
end

function collectQuest()
    if getgenv().quest == "Thief Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 1})
    elseif
       getgenv().quest == "Buff Thief Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 3})
    elseif
    getgenv().quest == "Desert Thief Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 2})
    elseif
    getgenv().quest == "Desert Swordsmand Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 4})
    elseif
    getgenv().quest == "Monkey Quest" then
            game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 5})
    elseif
    getgenv().quest == "Buff Monkey Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 6})
    elseif
    getgenv().quest == "Blizzard Bandit Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 7})
    elseif
    getgenv().quest == "Yeti Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 8})
    elseif
    getgenv().quest == "Mink Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 9})
    elseif
    getgenv().quest == "Pro Mink Quest" then
        game:GetService("Players").LocalPlayer.PlayerGui.DialougeGui.DialogModule.Sending:FireServer({["Key"] = "GetQuest",["QuestID"] = 10})
    end
end

function npcTP()
    for i,v in pairs(game:GetService("Workspace").World.NPC:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") and v.Name == getgenv().npc then
            hrp.CFrame = v.HumanoidRootPart.CFrame
        end
    end
end
-- UI LIBRARY
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("Aeroila Hub | Pro Piece PRO MAX", "Ocean") 

-- MAIN
local Main = Window:NewTab("Auto Farm") 
local Quest = Window:NewTab("Auto Quest")
local player = Window:NewTab("Players")
local Misc = Window:NewTab("Misc")
local MobFarmSection = Main:NewSection("Mob Farm") 
local QuestFarmSection = Quest:NewSection("Collect Quest")
local playerSection =  player:NewSection("Players")
local MiscSection = Misc:NewSection("Misc")


-- // AUTO FARM SECTION //
local mobdropdown = MobFarmSection:NewDropdown("Choose Mob", "Chooses the mob to autofarm", mobs, function(v) -- CREATES A MOB DROPDOWN TO CHOOSE THE MOBS (USES THE TABLE FROM THE MOBS SECTION ABOVE)
    toolDropdown = v
end)
MobFarmSection:NewToggle("Start Mob Farm", "Toggles the autofarming of the mobs", function(v) 
    getgenv().autofarmmobs = v
    while wait() do -- INFINITE LOOP
        if getgenv().autofarmmobs == false then return end 
        if getgenv().mob == nil then
            getgenv().autofarmmobs = false 
            return 
        end
        local mob = game:GetService("Workspace").World.Live:FindFirstChild(getgenv().mob)
        if mob == nil then
            while wait() do 
                wait() 
                if getgenv().autofarmmobs == false then return end 
                if game:GetService("Workspace").World.Live:FindFirstChild(getgenv().mob) ~= nil then break; end
            end 
        else
            local mob2 = mob
            while wait() do
                mob = game:GetService("Workspace").World.Live:FindFirstChild(getgenv().mob)
                if mob ~= mob2 then break; end
                if getgenv().autofarmmobs == false then return end 
                if mob ~= nil then
                    if mob:FindFirstChild("Humanoid") then
                        if mob.Humanoid.Health == 0 then wait(0.1) mob:Destroy() break; end 
                    end
                    if mob:FindFirstChild("HumanoidRootPart") then
                        hrp.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0,0,5)
                    end
                end
            end
        end
    end
end)
MobFarmSection:NewToggle("Auto Attack", "Auto attacks mob", function(v)
    getgenv().autoAttack = v
    while task.wait() do
        if not getgenv().autoAttack then return end
        workspace.World.Live[player.Name]:WaitForChild(toolDropdown).Server.RemoteEvent:FireServer("M1")
    end
end)
local MobFarmSection = Main:NewSection("Weapon Equip/Auto Attack")
local weaponDropdown = MobFarmSection:NewDropdown("Choose Weapon", "Chooses the weapon to attack with", tools, function(v) -- CREATES A MOB DROPDOWN TO CHOOSE THE MOBS (USES THE TABLE FROM THE MOBS SECTION ABOVE)
    getgenv().currentweapon = v
end)
MobFarmSection:NewToggle("Auto Equip", "Auto Equips the weapon", function(v)
    getgenv().equipWeapon = v
    while task.wait(0.1) do
        if not getgenv().equipWeapon then return end
        for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.Name == toolDropdown and v.Parent then
                player.Character.Humanoid:EquipTool(v)
            end
        end
    end
end)
-- // PLAYER SECTION //
playerSection:NewSlider("WalkSpeed", "Changes the speed of the character.", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)
playerSection:NewSlider("JumpPower", "Changes the JumpPower of the character.", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)
local MobFarmSection = Main:NewSection("Fruit Sniper")
local playerSection = player:NewSection("Devil Fruit Sniper")
playerSection:NewToggle("Farm Devil Fruits","Auto farms devil fruits", function(v)
    getgenv()farmDevil = v
    while task.wait() do
        for i,v in pairs(game:GetService("Workspace").DFSpawns:GetDescendants()) do
			if v.Name == "Handle" and v.ClassName == "MeshPart" or v.ClassName == "Part" and v.Parent then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,0,3)
			task.wait(0.3)
			local function hold(keyCode, time)
			VIM:SendKeyEvent(true, keyCode, false, game)
			task.wait(time)
			VIM:SendKeyEvent(false, keyCode, false, game)
			end
			hold(Enum.KeyCode.LeftControl, 10)
        end
    end
end
end)

-- // MISC SECTION // 
local islandsdropdown = MiscSection:NewDropdown("Choose Island", "Chooses the island you want to teleport to", islands, function(v) -- CREATES A MOB DROPDOWN TO CHOOSE THE MOBS (USES THE TABLE FROM THE MOBS SECTION ABOVE)
    getgenv().island = v
end)
MiscSection:NewButton("Teleport To Selected Island", "Teleports to the selected island", function()
    islandTP()
end)
local MiscSection = Misc:NewSection("Teleport To NPCS")
local NPCdropdown = MiscSection:NewDropdown("Choose NPC", "Chooses the NPC you want to teleport to", npcs, function(v) -- CREATES A MOB DROPDOWN TO CHOOSE THE MOBS (USES THE TABLE FROM THE MOBS SECTION ABOVE)
    getgenv().npc = v
end)
MiscSection:NewButton("Teleport To Selected NPC", "Teleports to the selected NPC", function()
    npcTP()
end)
-- // QUEST SECTION // 
local questdropdown = QuestFarmSection:NewDropdown("Choose Quest", "Chooses the quest to farm", quests, function(v) -- CREATES A MOB DROPDOWN TO CHOOSE THE MOBS (USES THE TABLE FROM THE MOBS SECTION ABOVE)
    getgenv().quest = v
end)
QuestFarmSection:NewButton("Grab Quest", "Grabs the selected quest", function()
    collectQuest()
end)
